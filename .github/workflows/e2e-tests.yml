name: Run e2e tests

on:
  workflow_dispatch:
  issue_comment:
    types:
      - created

env:
  IMAGE: ${{ github.head_ref || github.ref_name }}
  KUTTL_VERSION: 0.11.0

jobs:

  install-kuttl:
    if: |
      ! github.event.issue.pull_request || (
        github.event.issue.pull_request &&
        github.event.issue.user == github.repository_owner &&
        contains(github.event.issue.body, '/kuttl-tests')
      )
    runs-on: ubuntu-latest
    steps:
      - name: Cache Kuttl
        id: cache-kuttl
        uses: actions/cache@v2.1.7
        with:
          path: kuttl
          key: ${{ runner.os }}-kuttl-${{ env.KUTTL_VERSION }}

      - name: download-kuttl
        if: steps.cache-kuttl.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/kudobuilder/kuttl/releases/download/v${{ env.KUTTL_VERSION }}/kubectl-kuttl_${{ env.KUTTL_VERSION }}_linux_i386 -o kuttl

  kuttl-casskop:
    needs: install-kuttl
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        test-name: [operations, sidecars, scaling, multi-dcs, backup-restore]
    steps:
      # - name: Get PR branch name if comment
      #   if: github.event_name == 'issue_comment'
      #   id: 'get-branch'
      #   env:
      #     REPO: ${{ github.repository }}
      #     PR_NO: ${{ github.event.issue.number }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: echo ::set-output name=branch::$(gh pr view $PR_NO --repo $REPO --json headRefName --jq '.headRefName')

      # - name: Checkout branch from issue if comment
      #   if: github.event_name == 'issue_comment'
      #   uses: actions/checkout@v3
      #   with:
      #     ref: ${{ steps.get-branch.outputs.branch }}

      - name: Checkout
        if: github.event_name != 'issue_comment'
        uses: actions/checkout@v3

      - uses: rinx/setup-k3d@v0.0.4
        with:
          version: v5.4.0
          options: --image rancher/k3s:v1.20.15-k3s1

      - uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Restore Kuttl
        id: cache-kuttl
        uses: actions/cache@v2.1.7
        with:
          path: kuttl
          key: ${{ runner.os }}-kuttl-${{ env.KUTTL_VERSION }}

      - name: Add aws-backup-secrets with S3
        if: matrix.test-name == 'backup-restore'
        working-directory: test/kuttl
        run: |
          cat <<EOF >> backup-restore/00-createCluster.yaml
          ---
          apiVersion: v1
          kind: Secret
          metadata:
            name: aws-backup-secrets
          type: Opaque
          stringData:
            awsaccesskeyid: ${{ secrets.AWS_ACCESS_KEY_ID }}
            awssecretaccesskey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            awsregion: us-west-2
          EOF

          cat <<EOF >> backup-restore/00-assert.yaml
          ---
          apiVersion: v1
          kind: Secret
          metadata:
            name: aws-backup-secrets
          EOF

      - name: Run kuttl tests
        run: |
          chmod u+x kuttl
          PATH=$PWD:$PATH
          helm install casskop charts/casskop --set image.tag=${{ env.IMAGE }}
          cd test/kuttl/
          kuttl test --test ${{ matrix.test-name }} --namespace default --skip-delete
