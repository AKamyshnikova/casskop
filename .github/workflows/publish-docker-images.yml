name: Build and publish Docker images

on:
  push:
    # branches: ['release']
    branches: ['helm']
    # tags: '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  casskop:
    runs-on: ubuntu-latest
    permissions:
      # contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN_PACKAGES }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          tags: cscetbon/casskop:v2.1.0
          # push: true

  multi-casskop:
    runs-on: ubuntu-latest
    permissions:
      # contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN_PACKAGES }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: multi-casskop/Dockerfile
          tags: cscetbon/multi-casskop:v2.1.0
          # push: true

  generate-casskop:
    runs-on: ubuntu-latest
    container: orangeopensource/casskop-build:v1.13.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache vendor modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-casskop-vendor
        with:
          path: |
            vendor
            /go/pkg
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Download dependencies
        run: go mod download

      - name: Vendor dependencies
        run: go mod vendor

      - name: Generate k8s & crds
        run: |
          GO111MODULE=on go install github.com/mikefarah/yq/v4@latest
          make generate
          [ "$(git ls-files -m | grep -cE 'zz_generated|crds')" -eq 0 ]
