name: Test & publish Docker images

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    paths-ignore:
      - 'website/**'

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.head_ref || github.ref_name }}
  KUTTL_VERSION: 0.11.0


jobs:

  not-missing-manifests:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    container: ghcr.io/cscetbon/casskop-build:v1.13.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache vendor modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: casskop-vendor
        with:
          path: |
            vendor
            /go/pkg
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Download dependencies
        run: go mod download

      - name: Vendor dependencies
        run: go mod vendor

      - name: Generate k8s & crds
        run: |
          GO111MODULE=on go install github.com/mikefarah/yq/v4@latest
          make generate

      - name: Ensure there are no missing changes
        run: |
          [ "$(git ls-files -m | grep -cE 'zz_generated|crds')" -eq 0 ]

  unit-tests:
    runs-on: ubuntu-latest
    container: ghcr.io/cscetbon/casskop-build:v1.13.0
    needs: not-missing-manifests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache vendor modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: casskop-vendor
        with:
          path: |
            vendor
            /go/pkg
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Run unit Tests
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          go mod vendor
          make unit-test-with-vendor

  docker-images:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs: unit-tests
    strategy:
      matrix:
        image: [casskop, multi-casskop]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: docker/${{ matrix.image }}/Dockerfile
          tags: ghcr.io/cscetbon/${{ matrix.image }}:${{ env.IMAGE }}
          push: true

  install-kuttl:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    needs: docker-images
    steps:
      - name: Cache Kuttl
        id: cache-kuttl
        uses: actions/cache@v2.1.7
        with:
          path: kuttl
          key: ${{ runner.os }}-kuttl-${{ env.KUTTL_VERSION }}

      - name: download-kuttl
        if: steps.cache-kuttl.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/kudobuilder/kuttl/releases/download/v${{ env.KUTTL_VERSION }}/kubectl-kuttl_${{ env.KUTTL_VERSION }}_linux_i386 -o kuttl

  kuttl-casskop:
    needs: install-kuttl
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        kuttl-test-name: [operations, sidecars, scaling, multi-dcs]
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_run.head_branch }}

    - uses: rinx/setup-k3d@v0.0.4
      with:
        version: v4.4.8
        options: --image rancher/k3s:v1.20.15-k3s1

    - uses: azure/setup-helm@v1
      with:
        version: v3.8.1

    - name: Restore Kuttl
      id: cache-kuttl
      uses: actions/cache@v2.1.7
      with:
        path: kuttl
        key: ${{ runner.os }}-kuttl-${{ env.KUTTL_VERSION }}

    - name: Run kuttl tests
      run: |
        chmod u+x kuttl
        PATH=$PWD:$PATH
        helm install casskop charts/casskop --set image.tag=${{ env.IMAGE }}
        cd test/kuttl/
        kuttl test --test ${{ matrix.kuttl-test-name }} --namespace default
